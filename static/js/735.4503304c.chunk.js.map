{"version":3,"file":"static/js/735.4503304c.chunk.js","mappings":"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","sources":["js/components/range.jsx","js/components/checkbox-mortgage.jsx","js/components/checkbox-car.jsx","js/components/credit-parameters.jsx"],"sourcesContent":["import React from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport PropTypes from \"prop-types\";\n\nconst Range = (props) => {\n  const { parameters, currentValue, onChangeRange } = props;\n  const { min, max, step } = parameters;\n  return (\n    <div className=\"calculator__range\">\n      <Slider\n        step={step}\n        min={min}\n        max={max}\n        value={currentValue}\n        onChange={onChangeRange}\n        railStyle={{ backgroundColor: \"#C1C2CA\", height: `1px` }}\n        trackStyle={{ backgroundColor: \"#2C36F2\", height: `1px` }}\n        handleStyle={{\n          marginTop: -6,\n          border: `none`,\n          height: 14,\n          width: 14,\n          backgroundColor: \"#2C36F2\",\n        }}\n      />\n    </div>\n  );\n};\n\nRange.propTypes = {\n  onChangeRange: PropTypes.func.isRequired,\n  currentValue: PropTypes.number.isRequired,\n  parameters: PropTypes.shape({\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Range;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckboxMortgage = (props) => {\n  const { isCapital, setIsCapital } = props;\n\n  useEffect(() => {\n    setIsCapital(true);\n  }, [setIsCapital]);\n\n  return (\n    <div>\n      <input\n        className=\"visually-hidden calculator__checkbox\"\n        type=\"checkbox\"\n        id=\"capital\"\n        checked={isCapital}\n        onChange={(evt) => setIsCapital(evt.target.checked)}\n      />\n      <label htmlFor=\"capital\">Использовать материнский капитал</label>\n    </div>\n  );\n};\n\nCheckboxMortgage.propTypes = {\n  isCapital: PropTypes.bool.isRequired,\n  setIsCapital: PropTypes.func.isRequired,\n};\n\nexport default CheckboxMortgage;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckboxCar = (props) => {\n  const {\n    isCarInsurance,\n    isLifeInsurance,\n    setIsCarInsurance,\n    setIsLifeInsurance,\n  } = props;\n\n  useEffect(() => {\n    setIsCarInsurance(true);\n    setIsLifeInsurance(true);\n  }, [setIsCarInsurance, setIsLifeInsurance]);\n\n  return (\n    <div>\n      <div>\n        <input\n          className=\"visually-hidden  calculator__checkbox\"\n          type=\"checkbox\"\n          id=\"car-insurance\"\n          checked={isCarInsurance}\n          onChange={(evt) => setIsCarInsurance(evt.target.checked)}\n        />\n        <label htmlFor=\"car-insurance\">Оформить КАСКО в нашем банке</label>\n      </div>\n      <div>\n        <input\n          className=\"visually-hidden  calculator__checkbox\"\n          type=\"checkbox\"\n          id=\"life-insurance\"\n          checked={isLifeInsurance}\n          onChange={(evt) => setIsLifeInsurance(evt.target.checked)}\n        />\n        <label htmlFor=\"life-insurance\">\n          Оформить Страхование жизни в нашем банке\n        </label>\n      </div>\n    </div>\n  );\n};\n\nCheckboxCar.propTypes = {\n  isCarInsurance: PropTypes.bool.isRequired,\n  isLifeInsurance: PropTypes.bool.isRequired,\n  setIsCarInsurance: PropTypes.func.isRequired,\n  setIsLifeInsurance: PropTypes.func.isRequired,\n};\nexport default CheckboxCar;\n","import React from \"react\";\n\nimport { useCreditCalculatorContext } from \"../contexts/CreditCalculatorContext\";\nimport {\n  addSpacesAfterThreeCharacters,\n  deleteLine,\n  getSumInitialFee,\n  onFocusInput,\n  onBlurInput,\n  getDurationUnit,\n} from \"../utils\";\nimport { MORTGAGE, CAR, CURRENCIES, DURATION_UNITS } from \"../const\";\n\nimport Range from \"./range\";\nimport CheckboxMortgage from \"./checkbox-mortgage\";\nimport CheckboxCar from \"./checkbox-car\";\n\nconst CreditParameters = () => {\n  const {\n    parameters: { initialFee, price, duration, type },\n    setCurrentPrice,\n    setIsValidPrice,\n    setSumInitialFee,\n    setIsCapital,\n    setCurrentDuration,\n    currentPrice,\n    isValidPrice,\n    sumInitialFee,\n    setIsLifeInsurance,\n    currentDuration,\n    setIsCarInsurance,\n    setRateInitialFee,\n    isCarInsurance,\n    isLifeInsurance,\n    rateInitialFee,\n    isCapital,\n  } = useCreditCalculatorContext();\n\n  const onInputPrice = (evt) => {\n    const numPrice = Number(deleteLine(evt.target.value, CURRENCIES));\n    if (numPrice || evt.target.value === \"\") {\n      setCurrentPrice(addSpacesAfterThreeCharacters(String(numPrice)));\n      if (numPrice < price.min || numPrice > price.max) {\n        setIsValidPrice(false);\n      }\n      return;\n    }\n    return;\n  };\n\n  const onInputSumInitialFee = (evt) => {\n    const numSumInitialFee = Number(deleteLine(evt.target.value, CURRENCIES));\n    if (numSumInitialFee || evt.target.value === \"\") {\n      setSumInitialFee(addSpacesAfterThreeCharacters(String(numSumInitialFee)));\n      return;\n    }\n    return;\n  };\n\n  const onInputDuration = (evt) => {\n    const numDuration = Number(deleteLine(evt.target.value, DURATION_UNITS));\n    if (numDuration || evt.target.value === \"\") {\n      setCurrentDuration(String(numDuration));\n      return;\n    }\n    return;\n  };\n\n  const onIncrementPrice = () => {\n    const result = Number(deleteLine(currentPrice, CURRENCIES)) + price.step;\n    setCurrentPrice(addSpacesAfterThreeCharacters(result) + CURRENCIES[0]);\n    return;\n  };\n\n  const onDecrementPrice = () => {\n    const result = Number(deleteLine(currentPrice, CURRENCIES)) - price.step;\n    setCurrentPrice(addSpacesAfterThreeCharacters(result) + CURRENCIES[0]);\n    return;\n  };\n\n  const onCheckInitialFee = (value) => {\n    const minSumInitialFee = getSumInitialFee(currentPrice, initialFee.min);\n    const maxSumInitialFee = getSumInitialFee(currentPrice, initialFee.max);\n    const numSumInitialFee = Number(deleteLine(value, CURRENCIES));\n\n    if (numSumInitialFee < minSumInitialFee) {\n      setRateInitialFee(initialFee.min);\n      return String(minSumInitialFee);\n    }\n\n    if (numSumInitialFee > maxSumInitialFee) {\n      setRateInitialFee(initialFee.max);\n      return String(maxSumInitialFee);\n    }\n\n    setRateInitialFee(\n      (numSumInitialFee / Number(deleteLine(currentPrice, CURRENCIES))) * 100\n    );\n    return value;\n  };\n\n  const onCheckDuration = (value) => {\n    const numDuration = Number(deleteLine(value, DURATION_UNITS));\n\n    if (numDuration < duration.min) {\n      return String(duration.min);\n    }\n\n    if (numDuration > duration.max) {\n      return String(duration.max);\n    }\n\n    return value;\n  };\n\n  return (\n    <React.Fragment>\n      <fieldset className=\"calculator__step calculator__step--2\">\n        <legend>Шаг 2. Введите параметры кредита</legend>\n        <div className=\"calculator__input-wrapper\">\n          <label htmlFor=\"price\">\n            Стоимость {type === MORTGAGE.type ? `недвижимости` : `автомобиля`}\n          </label>\n          <div\n            className={`calculator__input  input calculator__input--price ${\n              !isValidPrice ? `calculator__input--price-error` : ``\n            }`}\n          >\n            <button\n              className=\"calculator__price-button calculator__price-button--decrement\"\n              type=\"button\"\n              onClick={onDecrementPrice}\n            />\n            <input\n              className=\"input input--price\"\n              type=\"text\"\n              id=\"price\"\n              value={currentPrice}\n              onFocus={(evt) => setCurrentPrice(onFocusInput(evt, CURRENCIES))}\n              onBlur={() =>\n                setCurrentPrice(\n                  onBlurInput(currentPrice, CURRENCIES, CURRENCIES[0])\n                )\n              }\n              onInput={onInputPrice}\n            />\n            <button\n              className=\"calculator__price-button calculator__price-button--increment\"\n              type=\"button\"\n              onClick={onIncrementPrice}\n            />\n            {!isValidPrice && (\n              <span className=\"calculator__price-error-msg\">\n                Некорректное значение\n              </span>\n            )}\n          </div>\n          <span className=\"calculator__label calculator__label--price\">\n            От {price.min} до {price.max} {CURRENCIES[0]}\n          </span>\n        </div>\n        <div className=\"calculator__input-wrapper\">\n          <label htmlFor=\"initial-fee\">Первоначальный взнос</label>\n          <input\n            className=\"calculator__input calculator__input--initial-fee input\"\n            type=\"text\"\n            id=\"initial-fee\"\n            value={sumInitialFee}\n            onFocus={(evt) => setSumInitialFee(onFocusInput(evt, CURRENCIES))}\n            onBlur={() =>\n              setSumInitialFee(\n                onBlurInput(\n                  onCheckInitialFee(sumInitialFee),\n                  CURRENCIES,\n                  CURRENCIES[0]\n                )\n              )\n            }\n            onInput={onInputSumInitialFee}\n          />\n          <Range\n            parameters={initialFee}\n            currentValue={rateInitialFee}\n            onChangeRange={(value) => setRateInitialFee(value)}\n          />\n          <span className=\"calculator__label\">{initialFee.min + `%`}</span>\n        </div>\n        <div className=\"calculator__input-wrapper \">\n          <label htmlFor=\"duration\">Срок кредитования</label>\n          <input\n            className=\"calculator__input calculator__input--duration input\"\n            type=\"text\"\n            id=\"duration\"\n            value={currentDuration}\n            onFocus={(evt) =>\n              setCurrentDuration(onFocusInput(evt, DURATION_UNITS))\n            }\n            onBlur={() =>\n              setCurrentDuration(\n                onBlurInput(\n                  onCheckDuration(currentDuration),\n                  DURATION_UNITS,\n                  getDurationUnit(onCheckDuration(currentDuration))\n                )\n              )\n            }\n            onInput={onInputDuration}\n          />\n          <Range\n            parameters={duration}\n            currentValue={Number(deleteLine(currentDuration, DURATION_UNITS))}\n            onChangeRange={(value) =>\n              setCurrentDuration(value + getDurationUnit(value))\n            }\n          />\n          <div className=\"calculator__range-label\">\n            <span className=\"calculator__label\">\n              {duration.min + getDurationUnit(duration.min)}\n            </span>\n            <span className=\"calculator__label\">\n              {duration.max + getDurationUnit(duration.max)}\n            </span>\n          </div>\n        </div>\n        {type === MORTGAGE.type ? (\n          <CheckboxMortgage isCapital={isCapital} setIsCapital={setIsCapital} />\n        ) : (\n          ``\n        )}\n        {type === CAR.type ? (\n          <CheckboxCar\n            isCarInsurance={isCarInsurance}\n            isLifeInsurance={isLifeInsurance}\n            setIsCarInsurance={setIsCarInsurance}\n            setIsLifeInsurance={setIsLifeInsurance}\n          />\n        ) : (\n          ``\n        )}\n      </fieldset>\n    </React.Fragment>\n  );\n};\n\nexport default CreditParameters;\n"],"names":["props","parameters","currentValue","onChangeRange","min","max","step","className","value","onChange","railStyle","backgroundColor","height","trackStyle","handleStyle","marginTop","border","width","isCapital","setIsCapital","useEffect","type","id","checked","evt","target","htmlFor","isCarInsurance","isLifeInsurance","setIsCarInsurance","setIsLifeInsurance","useCreditCalculatorContext","initialFee","price","duration","setCurrentPrice","setIsValidPrice","setSumInitialFee","setCurrentDuration","currentPrice","isValidPrice","sumInitialFee","currentDuration","setRateInitialFee","rateInitialFee","onCheckDuration","numDuration","Number","deleteLine","DURATION_UNITS","String","MORTGAGE","onClick","result","CURRENCIES","addSpacesAfterThreeCharacters","onFocus","onFocusInput","onBlur","onBlurInput","onInput","numPrice","minSumInitialFee","getSumInitialFee","maxSumInitialFee","numSumInitialFee","onCheckInitialFee","getDurationUnit","CAR"],"sourceRoot":""}